from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder
from aiogram.types.reply_keyboard_remove import ReplyKeyboardRemove

from database.crud import get_user, update_user
from database.models import User
from datetime import datetime

router = Router()

# –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
edit_temp = {}

def get_profile_text(user: User) -> str:
    return (
        "üìå **–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å**\n\n"
        f"üë§ –ò–º—è: {user.name}\n"
        f"üéÇ –í–æ–∑—Ä–∞—Å—Ç: {user.age}\n"
        f"ü©∫ –¢–∏–ø –¥–∏–∞–±–µ—Ç–∞: {user.diabetes_type}\n"
        f"‚öñÔ∏è –í–µ—Å: {user.weight} –∫–≥\n"
        f"üìè –†–æ—Å—Ç: {user.height} —Å–º\n"
        f"üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {user.created_at.strftime('%d.%m.%Y')}"
    )

def get_edit_keyboard():
    builder = InlineKeyboardBuilder()
    builder.button(text="‚úèÔ∏è –ò–º—è", callback_data="edit_name")
    builder.button(text="‚úèÔ∏è –í–æ–∑—Ä–∞—Å—Ç", callback_data="edit_age")
    builder.button(text="‚úèÔ∏è –¢–∏–ø –¥–∏–∞–±–µ—Ç–∞", callback_data="edit_diabetes")
    builder.button(text="‚úèÔ∏è –í–µ—Å", callback_data="edit_weight")
    builder.button(text="‚úèÔ∏è –†–æ—Å—Ç", callback_data="edit_height")
    builder.button(text="üîô –í –º–µ–Ω—é", callback_data="menu")
    builder.adjust(2, 2, 1)
    return builder.as_markup()

def get_cancel_keyboard():
    builder = ReplyKeyboardBuilder()
    builder.button(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")
    return builder.as_markup(resize_keyboard=True)

@router.message(Command("profile"))
async def show_profile(message: Message):
    user = await get_user(message.from_user.id)
    if not user:
        await message.answer("‚ùå –°–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —Å –ø–æ–º–æ—â—å—é /register")
        return
    
    await message.answer(
        get_profile_text(user),
        reply_markup=get_edit_keyboard()
    )

@router.callback_query(F.data.startswith("edit_"))
async def start_edit(callback: CallbackQuery):
    field = callback.data.split("_")[1]
    edit_temp[callback.from_user.id] = {"field": field}
    
    prompts = {
        "name": "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è:",
        "age": "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –≤–æ–∑—Ä–∞—Å—Ç:",
        "diabetes": "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–∏–∞–±–µ—Ç–∞:\n1 - 1 —Ç–∏–ø\n2 - 2 —Ç–∏–ø\n3 - –ì–µ—Å—Ç–∞—Ü–∏–æ–Ω–Ω—ã–π\n4 - –î—Ä—É–≥–æ–µ",
        "weight": "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –≤–µ—Å –≤ –∫–≥:",
        "height": "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ä–æ—Å—Ç –≤ —Å–º:"
    }
    
    await callback.message.answer(
        prompts[field],
        reply_markup=get_cancel_keyboard()
    )
    await callback.answer()

@router.message(F.text == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")
async def cancel_edit(message: Message):
    if message.from_user.id in edit_temp:
        del edit_temp[message.from_user.id]
    await message.answer(
        "‚ùå –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω—ã",
        reply_markup=ReplyKeyboardRemove()
    )

@router.message(F.from_user.id.in_(edit_temp.keys()))
async def process_edit(message: Message):
    user_id = message.from_user.id
    field = edit_temp[user_id]["field"]
    value = message.text
    
    try:
        if field == "name":
            if len(value) < 2 or len(value) > 50:
                raise ValueError("–ò–º—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 2 –¥–æ 50 —Å–∏–º–≤–æ–ª–æ–≤")
            update_data = {"name": value}
            
        elif field == "age":
            age = int(value)
            if not 1 <= age <= 120:
                raise ValueError
            update_data = {"age": age}
            
        elif field == "diabetes":
            if value not in {"1", "2", "3", "4"}:
                raise ValueError
            update_data = {"diabetes_type": int(value)}
            
        elif field == "weight":
            weight = float(value.replace(',', '.'))
            if not 10 <= weight <= 300:
                raise ValueError
            update_data = {"weight": weight}
            
        elif field == "height":
            height = float(value.replace(',', '.'))
            if not 50 <= height <= 250:
                raise ValueError
            update_data = {"height": height}
            
        await update_user(user_id, **update_data)
        del edit_temp[user_id]
        
        user = await get_user(user_id)
        await message.answer(
            f"‚úÖ {field.capitalize()} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!\n\n" + get_profile_text(user),
            reply_markup=ReplyKeyboardRemove()
        )
        
    except ValueError as e:
        error_messages = {
            "name": "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è! –î–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 2 –¥–æ 50 —Å–∏–º–≤–æ–ª–æ–≤",
            "age": "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç! –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 120",
            "diabetes": "‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ (1-4)",
            "weight": "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–µ—Å! –ü—Ä–∏–º–µ—Ä: 68.5",
            "height": "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–æ—Å—Ç! –ü—Ä–∏–º–µ—Ä: 175"
        }
        await message.answer(error_messages[field])